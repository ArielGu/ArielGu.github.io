{"meta":{"version":1,"warehouse":"2.2.0"},"models":{"Asset":[{"_id":"themes/landscape/source/css/style.styl","path":"css/style.styl","modified":0,"renderable":1},{"_id":"themes/landscape/source/fancybox/blank.gif","path":"fancybox/blank.gif","modified":0,"renderable":1},{"_id":"themes/landscape/source/fancybox/fancybox_loading.gif","path":"fancybox/fancybox_loading.gif","modified":0,"renderable":1},{"_id":"themes/landscape/source/fancybox/fancybox_loading@2x.gif","path":"fancybox/fancybox_loading@2x.gif","modified":0,"renderable":1},{"_id":"themes/landscape/source/fancybox/fancybox_sprite.png","path":"fancybox/fancybox_sprite.png","modified":0,"renderable":1},{"_id":"themes/landscape/source/fancybox/fancybox_overlay.png","path":"fancybox/fancybox_overlay.png","modified":0,"renderable":1},{"_id":"themes/landscape/source/fancybox/fancybox_sprite@2x.png","path":"fancybox/fancybox_sprite@2x.png","modified":0,"renderable":1},{"_id":"themes/landscape/source/fancybox/jquery.fancybox.css","path":"fancybox/jquery.fancybox.css","modified":0,"renderable":1},{"_id":"themes/landscape/source/js/script.js","path":"js/script.js","modified":0,"renderable":1},{"_id":"themes/landscape/source/fancybox/jquery.fancybox.pack.js","path":"fancybox/jquery.fancybox.pack.js","modified":0,"renderable":1},{"_id":"themes/landscape/source/fancybox/jquery.fancybox.js","path":"fancybox/jquery.fancybox.js","modified":0,"renderable":1},{"_id":"themes/landscape/source/css/fonts/FontAwesome.otf","path":"css/fonts/FontAwesome.otf","modified":0,"renderable":1},{"_id":"themes/landscape/source/css/fonts/fontawesome-webfont.eot","path":"css/fonts/fontawesome-webfont.eot","modified":0,"renderable":1},{"_id":"themes/landscape/source/css/fonts/fontawesome-webfont.woff","path":"css/fonts/fontawesome-webfont.woff","modified":0,"renderable":1},{"_id":"themes/landscape/source/fancybox/helpers/fancybox_buttons.png","path":"fancybox/helpers/fancybox_buttons.png","modified":0,"renderable":1},{"_id":"themes/landscape/source/fancybox/helpers/jquery.fancybox-buttons.css","path":"fancybox/helpers/jquery.fancybox-buttons.css","modified":0,"renderable":1},{"_id":"themes/landscape/source/fancybox/helpers/jquery.fancybox-buttons.js","path":"fancybox/helpers/jquery.fancybox-buttons.js","modified":0,"renderable":1},{"_id":"themes/landscape/source/fancybox/helpers/jquery.fancybox-media.js","path":"fancybox/helpers/jquery.fancybox-media.js","modified":0,"renderable":1},{"_id":"themes/landscape/source/fancybox/helpers/jquery.fancybox-thumbs.css","path":"fancybox/helpers/jquery.fancybox-thumbs.css","modified":0,"renderable":1},{"_id":"themes/landscape/source/fancybox/helpers/jquery.fancybox-thumbs.js","path":"fancybox/helpers/jquery.fancybox-thumbs.js","modified":0,"renderable":1},{"_id":"themes/landscape/source/css/fonts/fontawesome-webfont.ttf","path":"css/fonts/fontawesome-webfont.ttf","modified":0,"renderable":1},{"_id":"themes/landscape/source/css/fonts/fontawesome-webfont.svg","path":"css/fonts/fontawesome-webfont.svg","modified":0,"renderable":1},{"_id":"themes/landscape/source/css/images/banner.jpg","path":"css/images/banner.jpg","modified":0,"renderable":1}],"Cache":[{"_id":"themes/landscape/.gitignore","hash":"58d26d4b5f2f94c2d02a4e4a448088e4a2527c77","modified":1535507170000},{"_id":"source/.DS_Store","hash":"9b000240b6134c26be8ac560d33c6d8c2a63453a","modified":1536031179000},{"_id":"themes/landscape/README.md","hash":"37fae88639ef60d63bd0de22314d7cc4c5d94b07","modified":1535507170000},{"_id":"themes/landscape/LICENSE","hash":"c480fce396b23997ee23cc535518ffaaf7f458f8","modified":1535507170000},{"_id":"themes/landscape/Gruntfile.js","hash":"71adaeaac1f3cc56e36c49d549b8d8a72235c9b9","modified":1535507170000},{"_id":"themes/landscape/_config.yml","hash":"79ac6b9ed6a4de5a21ea53fc3f5a3de92e2475ff","modified":1535507170000},{"_id":"themes/landscape/package.json","hash":"544f21a0b2c7034998b36ae94dba6e3e0f39f228","modified":1535507170000},{"_id":"source/_posts/.DS_Store","hash":"25163f6fb1517a4f9f5c255eac66f2fa3af3c0a1","modified":1535981014000},{"_id":"source/_posts/Module语法和加载方式.md","hash":"3c6808c0ab097d48bd526efcba98b79485ba76a7","modified":1536026962000},{"_id":"source/_posts/My-First-Post.md","hash":"a3ad16418d07ed9830ef1ab50bb17f19969f4247","modified":1535872834000},{"_id":"source/_posts/hello-world.md","hash":"8a02477044e2b77f1b262da2c48c01429e4a32e4","modified":1535507156000},{"_id":"themes/landscape/languages/de.yml","hash":"3ebf0775abbee928c8d7bda943c191d166ded0d3","modified":1535507170000},{"_id":"themes/landscape/languages/es.yml","hash":"76edb1171b86532ef12cfd15f5f2c1ac3949f061","modified":1535507170000},{"_id":"themes/landscape/languages/default.yml","hash":"3083f319b352d21d80fc5e20113ddf27889c9d11","modified":1535507170000},{"_id":"themes/landscape/languages/ja.yml","hash":"a73e1b9c80fd6e930e2628b393bfe3fb716a21a9","modified":1535507170000},{"_id":"themes/landscape/languages/fr.yml","hash":"415e1c580ced8e4ce20b3b0aeedc3610341c76fb","modified":1535507170000},{"_id":"themes/landscape/languages/nl.yml","hash":"12ed59faba1fc4e8cdd1d42ab55ef518dde8039c","modified":1535507170000},{"_id":"themes/landscape/languages/no.yml","hash":"965a171e70347215ec726952e63f5b47930931ef","modified":1535507170000},{"_id":"themes/landscape/languages/ko.yml","hash":"881d6a0a101706e0452af81c580218e0bfddd9cf","modified":1535507170000},{"_id":"themes/landscape/languages/pt.yml","hash":"57d07b75d434fbfc33b0ddb543021cb5f53318a8","modified":1535507170000},{"_id":"themes/landscape/languages/ru.yml","hash":"4fda301bbd8b39f2c714e2c934eccc4b27c0a2b0","modified":1535507170000},{"_id":"themes/landscape/languages/zh-CN.yml","hash":"ca40697097ab0b3672a80b455d3f4081292d1eed","modified":1535507170000},{"_id":"themes/landscape/languages/zh-TW.yml","hash":"53ce3000c5f767759c7d2c4efcaa9049788599c3","modified":1535507170000},{"_id":"themes/landscape/layout/archive.ejs","hash":"2703b07cc8ac64ae46d1d263f4653013c7e1666b","modified":1535507170000},{"_id":"themes/landscape/layout/category.ejs","hash":"765426a9c8236828dc34759e604cc2c52292835a","modified":1535507170000},{"_id":"themes/landscape/layout/index.ejs","hash":"aa1b4456907bdb43e629be3931547e2d29ac58c8","modified":1535507170000},{"_id":"themes/landscape/layout/layout.ejs","hash":"f155824ca6130080bb057fa3e868a743c69c4cf5","modified":1535507170000},{"_id":"themes/landscape/layout/page.ejs","hash":"7d80e4e36b14d30a7cd2ac1f61376d9ebf264e8b","modified":1535507170000},{"_id":"themes/landscape/layout/post.ejs","hash":"7d80e4e36b14d30a7cd2ac1f61376d9ebf264e8b","modified":1535507170000},{"_id":"themes/landscape/scripts/fancybox.js","hash":"aa411cd072399df1ddc8e2181a3204678a5177d9","modified":1535507170000},{"_id":"themes/landscape/layout/tag.ejs","hash":"eaa7b4ccb2ca7befb90142e4e68995fb1ea68b2e","modified":1535507170000},{"_id":"themes/landscape/layout/_partial/after-footer.ejs","hash":"d0d753d39038284d52b10e5075979cc97db9cd20","modified":1535507170000},{"_id":"themes/landscape/layout/_partial/archive.ejs","hash":"950ddd91db8718153b329b96dc14439ab8463ba5","modified":1535507170000},{"_id":"themes/landscape/layout/_partial/article.ejs","hash":"c4c835615d96a950d51fa2c3b5d64d0596534fed","modified":1535507170000},{"_id":"themes/landscape/layout/_partial/archive-post.ejs","hash":"c7a71425a946d05414c069ec91811b5c09a92c47","modified":1535507170000},{"_id":"themes/landscape/layout/_partial/footer.ejs","hash":"93518893cf91287e797ebac543c560e2a63b8d0e","modified":1535507170000},{"_id":"themes/landscape/layout/_partial/gauges-analytics.ejs","hash":"aad6312ac197d6c5aaf2104ac863d7eba46b772a","modified":1535507170000},{"_id":"themes/landscape/layout/_partial/google-analytics.ejs","hash":"f921e7f9223d7c95165e0f835f353b2938e40c45","modified":1535507170000},{"_id":"themes/landscape/layout/_partial/header.ejs","hash":"7e749050be126eadbc42decfbea75124ae430413","modified":1535507170000},{"_id":"themes/landscape/layout/_partial/head.ejs","hash":"5abf77aec957d9445fc71a8310252f0013c84578","modified":1535507170000},{"_id":"themes/landscape/layout/_partial/mobile-nav.ejs","hash":"e952a532dfc583930a666b9d4479c32d4a84b44e","modified":1535507170000},{"_id":"themes/landscape/layout/_partial/sidebar.ejs","hash":"930da35cc2d447a92e5ee8f835735e6fd2232469","modified":1535507170000},{"_id":"themes/landscape/layout/_widget/archive.ejs","hash":"beb4a86fcc82a9bdda9289b59db5a1988918bec3","modified":1535507170000},{"_id":"themes/landscape/layout/_widget/category.ejs","hash":"dd1e5af3c6af3f5d6c85dfd5ca1766faed6a0b05","modified":1535507170000},{"_id":"themes/landscape/layout/_widget/recent_posts.ejs","hash":"0d4f064733f8b9e45c0ce131fe4a689d570c883a","modified":1535507170000},{"_id":"themes/landscape/layout/_widget/tag.ejs","hash":"2de380865df9ab5f577f7d3bcadf44261eb5faae","modified":1535507170000},{"_id":"themes/landscape/layout/_widget/tagcloud.ejs","hash":"b4a2079101643f63993dcdb32925c9b071763b46","modified":1535507170000},{"_id":"themes/landscape/source/css/_extend.styl","hash":"222fbe6d222531d61c1ef0f868c90f747b1c2ced","modified":1535507170000},{"_id":"themes/landscape/source/css/_variables.styl","hash":"628e307579ea46b5928424313993f17b8d729e92","modified":1535507170000},{"_id":"themes/landscape/source/css/style.styl","hash":"a70d9c44dac348d742702f6ba87e5bb3084d65db","modified":1535507170000},{"_id":"themes/landscape/source/fancybox/blank.gif","hash":"2daeaa8b5f19f0bc209d976c02bd6acb51b00b0a","modified":1535507170000},{"_id":"themes/landscape/source/fancybox/fancybox_loading.gif","hash":"1a755fb2599f3a313cc6cfdb14df043f8c14a99c","modified":1535507170000},{"_id":"themes/landscape/source/fancybox/fancybox_loading@2x.gif","hash":"273b123496a42ba45c3416adb027cd99745058b0","modified":1535507170000},{"_id":"themes/landscape/source/fancybox/fancybox_sprite.png","hash":"17df19f97628e77be09c352bf27425faea248251","modified":1535507170000},{"_id":"themes/landscape/source/fancybox/fancybox_overlay.png","hash":"b3a4ee645ba494f52840ef8412015ba0f465dbe0","modified":1535507170000},{"_id":"themes/landscape/source/fancybox/fancybox_sprite@2x.png","hash":"30c58913f327e28f466a00f4c1ac8001b560aed8","modified":1535507170000},{"_id":"themes/landscape/source/fancybox/jquery.fancybox.css","hash":"aaa582fb9eb4b7092dc69fcb2d5b1c20cca58ab6","modified":1535507170000},{"_id":"themes/landscape/source/js/script.js","hash":"2876e0b19ce557fca38d7c6f49ca55922ab666a1","modified":1535507170000},{"_id":"themes/landscape/source/fancybox/jquery.fancybox.pack.js","hash":"9e0d51ca1dbe66f6c0c7aefd552dc8122e694a6e","modified":1535507170000},{"_id":"themes/landscape/source/fancybox/jquery.fancybox.js","hash":"d08b03a42d5c4ba456ef8ba33116fdbb7a9cabed","modified":1535507170000},{"_id":"themes/landscape/layout/_partial/post/category.ejs","hash":"c6bcd0e04271ffca81da25bcff5adf3d46f02fc0","modified":1535507170000},{"_id":"themes/landscape/layout/_partial/post/date.ejs","hash":"6197802873157656e3077c5099a7dda3d3b01c29","modified":1535507170000},{"_id":"themes/landscape/layout/_partial/post/gallery.ejs","hash":"3d9d81a3c693ff2378ef06ddb6810254e509de5b","modified":1535507170000},{"_id":"themes/landscape/layout/_partial/post/nav.ejs","hash":"16a904de7bceccbb36b4267565f2215704db2880","modified":1535507170000},{"_id":"themes/landscape/layout/_partial/post/tag.ejs","hash":"2fcb0bf9c8847a644167a27824c9bb19ac74dd14","modified":1535507170000},{"_id":"themes/landscape/layout/_partial/post/title.ejs","hash":"2f275739b6f1193c123646a5a31f37d48644c667","modified":1535507170000},{"_id":"themes/landscape/source/css/_partial/archive.styl","hash":"db15f5677dc68f1730e82190bab69c24611ca292","modified":1535507170000},{"_id":"themes/landscape/source/css/_partial/article.styl","hash":"10685f8787a79f79c9a26c2f943253450c498e3e","modified":1535507170000},{"_id":"themes/landscape/source/css/_partial/comment.styl","hash":"79d280d8d203abb3bd933ca9b8e38c78ec684987","modified":1535507170000},{"_id":"themes/landscape/source/css/_partial/header.styl","hash":"85ab11e082f4dd86dde72bed653d57ec5381f30c","modified":1535507170000},{"_id":"themes/landscape/source/css/_partial/footer.styl","hash":"e35a060b8512031048919709a8e7b1ec0e40bc1b","modified":1535507170000},{"_id":"themes/landscape/source/css/_partial/highlight.styl","hash":"bf4e7be1968dad495b04e83c95eac14c4d0ad7c0","modified":1535507170000},{"_id":"themes/landscape/source/css/_partial/mobile.styl","hash":"a399cf9e1e1cec3e4269066e2948d7ae5854d745","modified":1535507170000},{"_id":"themes/landscape/source/css/_partial/sidebar-aside.styl","hash":"890349df5145abf46ce7712010c89237900b3713","modified":1535507170000},{"_id":"themes/landscape/source/css/_partial/sidebar-bottom.styl","hash":"8fd4f30d319542babfd31f087ddbac550f000a8a","modified":1535507170000},{"_id":"themes/landscape/source/css/_partial/sidebar.styl","hash":"404ec059dc674a48b9ab89cd83f258dec4dcb24d","modified":1535507170000},{"_id":"themes/landscape/source/css/_util/mixin.styl","hash":"44f32767d9fd3c1c08a60d91f181ee53c8f0dbb3","modified":1535507170000},{"_id":"themes/landscape/source/css/_util/grid.styl","hash":"0bf55ee5d09f193e249083602ac5fcdb1e571aed","modified":1535507170000},{"_id":"themes/landscape/source/css/fonts/FontAwesome.otf","hash":"b5b4f9be85f91f10799e87a083da1d050f842734","modified":1535507170000},{"_id":"themes/landscape/source/css/fonts/fontawesome-webfont.eot","hash":"7619748fe34c64fb157a57f6d4ef3678f63a8f5e","modified":1535507170000},{"_id":"themes/landscape/source/css/fonts/fontawesome-webfont.woff","hash":"04c3bf56d87a0828935bd6b4aee859995f321693","modified":1535507170000},{"_id":"themes/landscape/source/fancybox/helpers/fancybox_buttons.png","hash":"e385b139516c6813dcd64b8fc431c364ceafe5f3","modified":1535507170000},{"_id":"themes/landscape/source/fancybox/helpers/jquery.fancybox-buttons.css","hash":"1a9d8e5c22b371fcc69d4dbbb823d9c39f04c0c8","modified":1535507170000},{"_id":"themes/landscape/source/fancybox/helpers/jquery.fancybox-buttons.js","hash":"dc3645529a4bf72983a39fa34c1eb9146e082019","modified":1535507170000},{"_id":"themes/landscape/source/fancybox/helpers/jquery.fancybox-media.js","hash":"294420f9ff20f4e3584d212b0c262a00a96ecdb3","modified":1535507170000},{"_id":"themes/landscape/source/fancybox/helpers/jquery.fancybox-thumbs.css","hash":"4ac329c16a5277592fc12a37cca3d72ca4ec292f","modified":1535507170000},{"_id":"themes/landscape/source/fancybox/helpers/jquery.fancybox-thumbs.js","hash":"47da1ae5401c24b5c17cc18e2730780f5c1a7a0c","modified":1535507170000},{"_id":"themes/landscape/source/css/fonts/fontawesome-webfont.ttf","hash":"7f09c97f333917034ad08fa7295e916c9f72fd3f","modified":1535507170000},{"_id":"themes/landscape/source/css/fonts/fontawesome-webfont.svg","hash":"46fcc0194d75a0ddac0a038aee41b23456784814","modified":1535507170000},{"_id":"themes/landscape/source/css/images/banner.jpg","hash":"f44aa591089fcb3ec79770a1e102fd3289a7c6a6","modified":1535507170000},{"_id":"public/2018/09/02/My-First-Post/index.html","hash":"046c094a45901904e4c6c29b5286edc8cbc1142f","modified":1536400525303},{"_id":"public/2018/08/29/hello-world/index.html","hash":"9b4e0d82e39cb5f4fd15cdbdf0108c768c4d7ab2","modified":1536400525303},{"_id":"public/archives/index.html","hash":"25ceb2890b5640e64d03d1ccc96b805c08aa12ac","modified":1536400525304},{"_id":"public/archives/2018/index.html","hash":"3ad63756ae01ce4da6d5d5d58891e96ea5d83bd0","modified":1536400525304},{"_id":"public/archives/2018/08/index.html","hash":"cbdeeffd6cd8826f429f4f76c5ea7524b03256d3","modified":1536400525304},{"_id":"public/archives/2018/09/index.html","hash":"5b218ff088ccf2798b636c9fc7ff51ed99d304f2","modified":1536400525304},{"_id":"public/2018/09/02/Module语法和加载方式/index.html","hash":"397700d4a22520ee8dc612c31b1d604ea89b5553","modified":1536400525304},{"_id":"public/index.html","hash":"a421d2fe550bc60fd980607bd8d98bd0197421b2","modified":1536400525304},{"_id":"public/fancybox/blank.gif","hash":"2daeaa8b5f19f0bc209d976c02bd6acb51b00b0a","modified":1536400525318},{"_id":"public/fancybox/fancybox_loading.gif","hash":"1a755fb2599f3a313cc6cfdb14df043f8c14a99c","modified":1536400525318},{"_id":"public/fancybox/fancybox_sprite.png","hash":"17df19f97628e77be09c352bf27425faea248251","modified":1536400525318},{"_id":"public/fancybox/fancybox_loading@2x.gif","hash":"273b123496a42ba45c3416adb027cd99745058b0","modified":1536400525318},{"_id":"public/fancybox/fancybox_overlay.png","hash":"b3a4ee645ba494f52840ef8412015ba0f465dbe0","modified":1536400525318},{"_id":"public/fancybox/fancybox_sprite@2x.png","hash":"30c58913f327e28f466a00f4c1ac8001b560aed8","modified":1536400525321},{"_id":"public/css/fonts/FontAwesome.otf","hash":"b5b4f9be85f91f10799e87a083da1d050f842734","modified":1536400525322},{"_id":"public/css/fonts/fontawesome-webfont.eot","hash":"7619748fe34c64fb157a57f6d4ef3678f63a8f5e","modified":1536400525322},{"_id":"public/fancybox/helpers/fancybox_buttons.png","hash":"e385b139516c6813dcd64b8fc431c364ceafe5f3","modified":1536400525322},{"_id":"public/css/fonts/fontawesome-webfont.woff","hash":"04c3bf56d87a0828935bd6b4aee859995f321693","modified":1536400525322},{"_id":"public/css/fonts/fontawesome-webfont.ttf","hash":"7f09c97f333917034ad08fa7295e916c9f72fd3f","modified":1536400525802},{"_id":"public/js/script.js","hash":"2876e0b19ce557fca38d7c6f49ca55922ab666a1","modified":1536400525808},{"_id":"public/fancybox/jquery.fancybox.css","hash":"aaa582fb9eb4b7092dc69fcb2d5b1c20cca58ab6","modified":1536400525808},{"_id":"public/fancybox/helpers/jquery.fancybox-buttons.css","hash":"1a9d8e5c22b371fcc69d4dbbb823d9c39f04c0c8","modified":1536400525808},{"_id":"public/fancybox/helpers/jquery.fancybox-buttons.js","hash":"dc3645529a4bf72983a39fa34c1eb9146e082019","modified":1536400525808},{"_id":"public/fancybox/helpers/jquery.fancybox-thumbs.css","hash":"4ac329c16a5277592fc12a37cca3d72ca4ec292f","modified":1536400525808},{"_id":"public/fancybox/helpers/jquery.fancybox-media.js","hash":"294420f9ff20f4e3584d212b0c262a00a96ecdb3","modified":1536400525808},{"_id":"public/fancybox/helpers/jquery.fancybox-thumbs.js","hash":"47da1ae5401c24b5c17cc18e2730780f5c1a7a0c","modified":1536400525808},{"_id":"public/css/style.css","hash":"5f8dadd37d0052c557061018fe6f568f64fced9b","modified":1536400525808},{"_id":"public/fancybox/jquery.fancybox.js","hash":"d08b03a42d5c4ba456ef8ba33116fdbb7a9cabed","modified":1536400525808},{"_id":"public/fancybox/jquery.fancybox.pack.js","hash":"9e0d51ca1dbe66f6c0c7aefd552dc8122e694a6e","modified":1536400525808},{"_id":"public/css/fonts/fontawesome-webfont.svg","hash":"46fcc0194d75a0ddac0a038aee41b23456784814","modified":1536400525812},{"_id":"public/css/images/banner.jpg","hash":"f44aa591089fcb3ec79770a1e102fd3289a7c6a6","modified":1536400525812}],"Category":[],"Data":[],"Page":[],"Post":[{"title":"Module语法和加载方式","date":"2018-09-02T15:18:56.000Z","_content":"\n# 背景\n\nJavascript 没有模块的(module)体系，ES6前主要是CommonJs(用于服务器端)、AMD(用于浏览器)\n\nES6 的加载方式：编译时加载/静态加载（即在编译时就完成模块加载），效率自然是比CommonJs（运行时加载）高。\n\n# ES6\n1.import命令具有提升效果；\n\n2.由于import是静态执行，所以不能使用变量和表达式（这种智能在运行时得到结果的语法结构）\n\n```\n// 报错\nimport {'f'+'oo'} from 'my_module;\n```\n\n3.import 语句会执行所加载的模块，但不会输入任何值，并且不会加载多次\n\n```\nimport('../a.js),import()函数功能类似于Node的require 方法，区别在于：前者是异步加载，后者是同步加载\n```\n\n# Module 的加载方式\n1.浏览器加载js文件会阻塞线程，所以允许异步加载的方式\n\n```\n<script src='./myModule.js' defer></script>\n<script src='./myModule.js' async></script>\n```\n \n**区别：**defer 会等到整个页面正常渲染完成后执行；而async 一旦下载完成，渲染引擎终止，执行脚本后继续渲染。\n\n加载es6 模块，也可用\\<script\\>标签，但是要加type=\"module\"属性。\n\n```\n<script src='./myModule.js' type=\"module\"></script>\n<!-- 等同于 -->\n<script src='./myModule.js' defer></script>\n\n<script src='./myModule.js' type=\"module\" async></script>\n<!-- 等同于 -->\n<script src='./myModule.js' async></script>\n```\n\n2.ES6 模块和CommonJs模块的差异\n\n- CommonJs 模块输出的是值的复制；ES6模块输出的是值的引用\n\n```\n<!-- CommonJS lib.js -->\nvar counter = 3;\nfunction inCounter(){\n\tcounter++;\n}\nmodule.exports={\n\tcounter: counter,\n\tinCounter: inCounter\n}\n\n<!-- CommonJS main.js -->\nvar mod = require('./lib');\nmod.counter // 3\nmode.inCouter();\nmod.counter //3\n\n<!-- ES6 lib.js -->\nexport let counter = 3;\nexport function inCounter(){\n\tcounter++;\n}\n\n<!-- ES6 main.js -->\nimport {counter, inCounter} from './lib';\ncounter //3\ninCounter();\ncounter //4\n```\n\nES6 模块的运行机制和CommonJs不同。ES6模块中JS引擎对脚本静态分析是，遇到模块加载命令（import）就会生成一个只读引用，等脚本真正运行了才会根据引用到被加载的模块中取值。\n**所以ES6模块是动态引用，没有缓存**\n\n注：地址是只读的，不能重新赋值\n\n- CommonJS 模块是运行时加载，ES6模块是编译时输出接口\n\n# Node 加载\n1. Node 有自己的CommonJS 模块格式，与ES6 模块格式不兼容，目前的解决方案是将两者分开，采用各自的加载方案。静态分析阶段，脚本只要有一行import 或 export 语句，Node就会认为是ES6模块；\n\n## CommonJs模块和ES6模块互相加载\n- import 命令加载CommonJS 模块\n步骤一： module.exports 等同于 export.default\n\n```\n// a.js\nmodule.exports={\n\tfoo:'hello',\n\tbar:'world'\n}\n\n<!-- 等同于 -->\nexport.default={\n\tfoo:'hello',\n\tbar:'world'\n}\n\n//引用\n<!-- 写法一 -->\nimport baz from './a'\n<!-- 写法二 -->\nimport {default as baz} from './a'\n// 上面两种写法\n//baz={foo:'hello',bar:'world'}\n<!-- 写法三 -->\nimport * as baz from './a'\n// baz={\n//\tget default(){return module.exports;}\n//\tget foo(){ return this.default.foo }.bind(baz);\n//\tget bar(){ return this.default.bar }.bind(baz);\n//}\n```\n\n步骤二：ES6模块是在编译时确定输出接口，CommonJS模块是在运行时才确定输出接口，所以一下写法❌\n\n```\nimport {readfile} from 'fs';\n```\n- require 命令加载ES6\nES6 模块的所有输出接口都会成为输出对象的属性\n\n```\n// es.js\nlet foo = {bar:'my-default'};\nexport default foo;\nfoo=null;\n\n// commonJs.js\nconst es_namespace = require('./es');\nes_namespace.deault // {bar:'my-default'}\n```\n\n注：es.js 对foo重新赋值没有在模块外反应出来，原因就是CommonJS加载的缓存\n\n---\n## 实际的应用\n1.单页按需加载\n\n```\nconst listRoutes = [\n    {\n        path: 'list/:pageName',\n        getComponent: (location, cb) => {\n            require.ensure([], (require) => {\n                cb(null, require('components/List/ListContainer').default);\n            }, 'list');\n        },\n        onEnter: ({ params }) => {\n            pageEnter({ ...params, pageType: 'list' });\n        },\n    },\n];\n```\n\n2.Koa 项目中模块引用\n\n\n","source":"_posts/Module语法和加载方式.md","raw":"---\ntitle: Module语法和加载方式\ndate: 2018-09-02 23:18:56\ntags:\n---\n\n# 背景\n\nJavascript 没有模块的(module)体系，ES6前主要是CommonJs(用于服务器端)、AMD(用于浏览器)\n\nES6 的加载方式：编译时加载/静态加载（即在编译时就完成模块加载），效率自然是比CommonJs（运行时加载）高。\n\n# ES6\n1.import命令具有提升效果；\n\n2.由于import是静态执行，所以不能使用变量和表达式（这种智能在运行时得到结果的语法结构）\n\n```\n// 报错\nimport {'f'+'oo'} from 'my_module;\n```\n\n3.import 语句会执行所加载的模块，但不会输入任何值，并且不会加载多次\n\n```\nimport('../a.js),import()函数功能类似于Node的require 方法，区别在于：前者是异步加载，后者是同步加载\n```\n\n# Module 的加载方式\n1.浏览器加载js文件会阻塞线程，所以允许异步加载的方式\n\n```\n<script src='./myModule.js' defer></script>\n<script src='./myModule.js' async></script>\n```\n \n**区别：**defer 会等到整个页面正常渲染完成后执行；而async 一旦下载完成，渲染引擎终止，执行脚本后继续渲染。\n\n加载es6 模块，也可用\\<script\\>标签，但是要加type=\"module\"属性。\n\n```\n<script src='./myModule.js' type=\"module\"></script>\n<!-- 等同于 -->\n<script src='./myModule.js' defer></script>\n\n<script src='./myModule.js' type=\"module\" async></script>\n<!-- 等同于 -->\n<script src='./myModule.js' async></script>\n```\n\n2.ES6 模块和CommonJs模块的差异\n\n- CommonJs 模块输出的是值的复制；ES6模块输出的是值的引用\n\n```\n<!-- CommonJS lib.js -->\nvar counter = 3;\nfunction inCounter(){\n\tcounter++;\n}\nmodule.exports={\n\tcounter: counter,\n\tinCounter: inCounter\n}\n\n<!-- CommonJS main.js -->\nvar mod = require('./lib');\nmod.counter // 3\nmode.inCouter();\nmod.counter //3\n\n<!-- ES6 lib.js -->\nexport let counter = 3;\nexport function inCounter(){\n\tcounter++;\n}\n\n<!-- ES6 main.js -->\nimport {counter, inCounter} from './lib';\ncounter //3\ninCounter();\ncounter //4\n```\n\nES6 模块的运行机制和CommonJs不同。ES6模块中JS引擎对脚本静态分析是，遇到模块加载命令（import）就会生成一个只读引用，等脚本真正运行了才会根据引用到被加载的模块中取值。\n**所以ES6模块是动态引用，没有缓存**\n\n注：地址是只读的，不能重新赋值\n\n- CommonJS 模块是运行时加载，ES6模块是编译时输出接口\n\n# Node 加载\n1. Node 有自己的CommonJS 模块格式，与ES6 模块格式不兼容，目前的解决方案是将两者分开，采用各自的加载方案。静态分析阶段，脚本只要有一行import 或 export 语句，Node就会认为是ES6模块；\n\n## CommonJs模块和ES6模块互相加载\n- import 命令加载CommonJS 模块\n步骤一： module.exports 等同于 export.default\n\n```\n// a.js\nmodule.exports={\n\tfoo:'hello',\n\tbar:'world'\n}\n\n<!-- 等同于 -->\nexport.default={\n\tfoo:'hello',\n\tbar:'world'\n}\n\n//引用\n<!-- 写法一 -->\nimport baz from './a'\n<!-- 写法二 -->\nimport {default as baz} from './a'\n// 上面两种写法\n//baz={foo:'hello',bar:'world'}\n<!-- 写法三 -->\nimport * as baz from './a'\n// baz={\n//\tget default(){return module.exports;}\n//\tget foo(){ return this.default.foo }.bind(baz);\n//\tget bar(){ return this.default.bar }.bind(baz);\n//}\n```\n\n步骤二：ES6模块是在编译时确定输出接口，CommonJS模块是在运行时才确定输出接口，所以一下写法❌\n\n```\nimport {readfile} from 'fs';\n```\n- require 命令加载ES6\nES6 模块的所有输出接口都会成为输出对象的属性\n\n```\n// es.js\nlet foo = {bar:'my-default'};\nexport default foo;\nfoo=null;\n\n// commonJs.js\nconst es_namespace = require('./es');\nes_namespace.deault // {bar:'my-default'}\n```\n\n注：es.js 对foo重新赋值没有在模块外反应出来，原因就是CommonJS加载的缓存\n\n---\n## 实际的应用\n1.单页按需加载\n\n```\nconst listRoutes = [\n    {\n        path: 'list/:pageName',\n        getComponent: (location, cb) => {\n            require.ensure([], (require) => {\n                cb(null, require('components/List/ListContainer').default);\n            }, 'list');\n        },\n        onEnter: ({ params }) => {\n            pageEnter({ ...params, pageType: 'list' });\n        },\n    },\n];\n```\n\n2.Koa 项目中模块引用\n\n\n","slug":"Module语法和加载方式","published":1,"updated":"2018-09-04T02:09:22.000Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cjlt97c7e0000mr6yf8zr8v2r","content":"<h1 id=\"背景\"><a href=\"#背景\" class=\"headerlink\" title=\"背景\"></a>背景</h1><p>Javascript 没有模块的(module)体系，ES6前主要是CommonJs(用于服务器端)、AMD(用于浏览器)</p>\n<p>ES6 的加载方式：编译时加载/静态加载（即在编译时就完成模块加载），效率自然是比CommonJs（运行时加载）高。</p>\n<h1 id=\"ES6\"><a href=\"#ES6\" class=\"headerlink\" title=\"ES6\"></a>ES6</h1><p>1.import命令具有提升效果；</p>\n<p>2.由于import是静态执行，所以不能使用变量和表达式（这种智能在运行时得到结果的语法结构）</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">// 报错</span><br><span class=\"line\">import &#123;&apos;f&apos;+&apos;oo&apos;&#125; from &apos;my_module;</span><br></pre></td></tr></table></figure>\n<p>3.import 语句会执行所加载的模块，但不会输入任何值，并且不会加载多次</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">import(&apos;../a.js),import()函数功能类似于Node的require 方法，区别在于：前者是异步加载，后者是同步加载</span><br></pre></td></tr></table></figure>\n<h1 id=\"Module-的加载方式\"><a href=\"#Module-的加载方式\" class=\"headerlink\" title=\"Module 的加载方式\"></a>Module 的加载方式</h1><p>1.浏览器加载js文件会阻塞线程，所以允许异步加载的方式</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&lt;script src=&apos;./myModule.js&apos; defer&gt;&lt;/script&gt;</span><br><span class=\"line\">&lt;script src=&apos;./myModule.js&apos; async&gt;&lt;/script&gt;</span><br></pre></td></tr></table></figure>\n<p><strong>区别：</strong>defer 会等到整个页面正常渲染完成后执行；而async 一旦下载完成，渲染引擎终止，执行脚本后继续渲染。</p>\n<p>加载es6 模块，也可用\\&lt;script>标签，但是要加type=”module”属性。</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&lt;script src=&apos;./myModule.js&apos; type=&quot;module&quot;&gt;&lt;/script&gt;</span><br><span class=\"line\">&lt;!-- 等同于 --&gt;</span><br><span class=\"line\">&lt;script src=&apos;./myModule.js&apos; defer&gt;&lt;/script&gt;</span><br><span class=\"line\"></span><br><span class=\"line\">&lt;script src=&apos;./myModule.js&apos; type=&quot;module&quot; async&gt;&lt;/script&gt;</span><br><span class=\"line\">&lt;!-- 等同于 --&gt;</span><br><span class=\"line\">&lt;script src=&apos;./myModule.js&apos; async&gt;&lt;/script&gt;</span><br></pre></td></tr></table></figure>\n<p>2.ES6 模块和CommonJs模块的差异</p>\n<ul>\n<li>CommonJs 模块输出的是值的复制；ES6模块输出的是值的引用</li>\n</ul>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&lt;!-- CommonJS lib.js --&gt;</span><br><span class=\"line\">var counter = 3;</span><br><span class=\"line\">function inCounter()&#123;</span><br><span class=\"line\">\tcounter++;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\">module.exports=&#123;</span><br><span class=\"line\">\tcounter: counter,</span><br><span class=\"line\">\tinCounter: inCounter</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">&lt;!-- CommonJS main.js --&gt;</span><br><span class=\"line\">var mod = require(&apos;./lib&apos;);</span><br><span class=\"line\">mod.counter // 3</span><br><span class=\"line\">mode.inCouter();</span><br><span class=\"line\">mod.counter //3</span><br><span class=\"line\"></span><br><span class=\"line\">&lt;!-- ES6 lib.js --&gt;</span><br><span class=\"line\">export let counter = 3;</span><br><span class=\"line\">export function inCounter()&#123;</span><br><span class=\"line\">\tcounter++;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">&lt;!-- ES6 main.js --&gt;</span><br><span class=\"line\">import &#123;counter, inCounter&#125; from &apos;./lib&apos;;</span><br><span class=\"line\">counter //3</span><br><span class=\"line\">inCounter();</span><br><span class=\"line\">counter //4</span><br></pre></td></tr></table></figure>\n<p>ES6 模块的运行机制和CommonJs不同。ES6模块中JS引擎对脚本静态分析是，遇到模块加载命令（import）就会生成一个只读引用，等脚本真正运行了才会根据引用到被加载的模块中取值。<br><strong>所以ES6模块是动态引用，没有缓存</strong></p>\n<p>注：地址是只读的，不能重新赋值</p>\n<ul>\n<li>CommonJS 模块是运行时加载，ES6模块是编译时输出接口</li>\n</ul>\n<h1 id=\"Node-加载\"><a href=\"#Node-加载\" class=\"headerlink\" title=\"Node 加载\"></a>Node 加载</h1><ol>\n<li>Node 有自己的CommonJS 模块格式，与ES6 模块格式不兼容，目前的解决方案是将两者分开，采用各自的加载方案。静态分析阶段，脚本只要有一行import 或 export 语句，Node就会认为是ES6模块；</li>\n</ol>\n<h2 id=\"CommonJs模块和ES6模块互相加载\"><a href=\"#CommonJs模块和ES6模块互相加载\" class=\"headerlink\" title=\"CommonJs模块和ES6模块互相加载\"></a>CommonJs模块和ES6模块互相加载</h2><ul>\n<li>import 命令加载CommonJS 模块<br>步骤一： module.exports 等同于 export.default</li>\n</ul>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">// a.js</span><br><span class=\"line\">module.exports=&#123;</span><br><span class=\"line\">\tfoo:&apos;hello&apos;,</span><br><span class=\"line\">\tbar:&apos;world&apos;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">&lt;!-- 等同于 --&gt;</span><br><span class=\"line\">export.default=&#123;</span><br><span class=\"line\">\tfoo:&apos;hello&apos;,</span><br><span class=\"line\">\tbar:&apos;world&apos;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">//引用</span><br><span class=\"line\">&lt;!-- 写法一 --&gt;</span><br><span class=\"line\">import baz from &apos;./a&apos;</span><br><span class=\"line\">&lt;!-- 写法二 --&gt;</span><br><span class=\"line\">import &#123;default as baz&#125; from &apos;./a&apos;</span><br><span class=\"line\">// 上面两种写法</span><br><span class=\"line\">//baz=&#123;foo:&apos;hello&apos;,bar:&apos;world&apos;&#125;</span><br><span class=\"line\">&lt;!-- 写法三 --&gt;</span><br><span class=\"line\">import * as baz from &apos;./a&apos;</span><br><span class=\"line\">// baz=&#123;</span><br><span class=\"line\">//\tget default()&#123;return module.exports;&#125;</span><br><span class=\"line\">//\tget foo()&#123; return this.default.foo &#125;.bind(baz);</span><br><span class=\"line\">//\tget bar()&#123; return this.default.bar &#125;.bind(baz);</span><br><span class=\"line\">//&#125;</span><br></pre></td></tr></table></figure>\n<p>步骤二：ES6模块是在编译时确定输出接口，CommonJS模块是在运行时才确定输出接口，所以一下写法❌</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">import &#123;readfile&#125; from &apos;fs&apos;;</span><br></pre></td></tr></table></figure>\n<ul>\n<li>require 命令加载ES6<br>ES6 模块的所有输出接口都会成为输出对象的属性</li>\n</ul>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">// es.js</span><br><span class=\"line\">let foo = &#123;bar:&apos;my-default&apos;&#125;;</span><br><span class=\"line\">export default foo;</span><br><span class=\"line\">foo=null;</span><br><span class=\"line\"></span><br><span class=\"line\">// commonJs.js</span><br><span class=\"line\">const es_namespace = require(&apos;./es&apos;);</span><br><span class=\"line\">es_namespace.deault // &#123;bar:&apos;my-default&apos;&#125;</span><br></pre></td></tr></table></figure>\n<p>注：es.js 对foo重新赋值没有在模块外反应出来，原因就是CommonJS加载的缓存</p>\n<hr>\n<h2 id=\"实际的应用\"><a href=\"#实际的应用\" class=\"headerlink\" title=\"实际的应用\"></a>实际的应用</h2><p>1.单页按需加载</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">const listRoutes = [</span><br><span class=\"line\">    &#123;</span><br><span class=\"line\">        path: &apos;list/:pageName&apos;,</span><br><span class=\"line\">        getComponent: (location, cb) =&gt; &#123;</span><br><span class=\"line\">            require.ensure([], (require) =&gt; &#123;</span><br><span class=\"line\">                cb(null, require(&apos;components/List/ListContainer&apos;).default);</span><br><span class=\"line\">            &#125;, &apos;list&apos;);</span><br><span class=\"line\">        &#125;,</span><br><span class=\"line\">        onEnter: (&#123; params &#125;) =&gt; &#123;</span><br><span class=\"line\">            pageEnter(&#123; ...params, pageType: &apos;list&apos; &#125;);</span><br><span class=\"line\">        &#125;,</span><br><span class=\"line\">    &#125;,</span><br><span class=\"line\">];</span><br></pre></td></tr></table></figure>\n<p>2.Koa 项目中模块引用</p>\n","site":{"data":{}},"excerpt":"","more":"<h1 id=\"背景\"><a href=\"#背景\" class=\"headerlink\" title=\"背景\"></a>背景</h1><p>Javascript 没有模块的(module)体系，ES6前主要是CommonJs(用于服务器端)、AMD(用于浏览器)</p>\n<p>ES6 的加载方式：编译时加载/静态加载（即在编译时就完成模块加载），效率自然是比CommonJs（运行时加载）高。</p>\n<h1 id=\"ES6\"><a href=\"#ES6\" class=\"headerlink\" title=\"ES6\"></a>ES6</h1><p>1.import命令具有提升效果；</p>\n<p>2.由于import是静态执行，所以不能使用变量和表达式（这种智能在运行时得到结果的语法结构）</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">// 报错</span><br><span class=\"line\">import &#123;&apos;f&apos;+&apos;oo&apos;&#125; from &apos;my_module;</span><br></pre></td></tr></table></figure>\n<p>3.import 语句会执行所加载的模块，但不会输入任何值，并且不会加载多次</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">import(&apos;../a.js),import()函数功能类似于Node的require 方法，区别在于：前者是异步加载，后者是同步加载</span><br></pre></td></tr></table></figure>\n<h1 id=\"Module-的加载方式\"><a href=\"#Module-的加载方式\" class=\"headerlink\" title=\"Module 的加载方式\"></a>Module 的加载方式</h1><p>1.浏览器加载js文件会阻塞线程，所以允许异步加载的方式</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&lt;script src=&apos;./myModule.js&apos; defer&gt;&lt;/script&gt;</span><br><span class=\"line\">&lt;script src=&apos;./myModule.js&apos; async&gt;&lt;/script&gt;</span><br></pre></td></tr></table></figure>\n<p><strong>区别：</strong>defer 会等到整个页面正常渲染完成后执行；而async 一旦下载完成，渲染引擎终止，执行脚本后继续渲染。</p>\n<p>加载es6 模块，也可用\\&lt;script>标签，但是要加type=”module”属性。</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&lt;script src=&apos;./myModule.js&apos; type=&quot;module&quot;&gt;&lt;/script&gt;</span><br><span class=\"line\">&lt;!-- 等同于 --&gt;</span><br><span class=\"line\">&lt;script src=&apos;./myModule.js&apos; defer&gt;&lt;/script&gt;</span><br><span class=\"line\"></span><br><span class=\"line\">&lt;script src=&apos;./myModule.js&apos; type=&quot;module&quot; async&gt;&lt;/script&gt;</span><br><span class=\"line\">&lt;!-- 等同于 --&gt;</span><br><span class=\"line\">&lt;script src=&apos;./myModule.js&apos; async&gt;&lt;/script&gt;</span><br></pre></td></tr></table></figure>\n<p>2.ES6 模块和CommonJs模块的差异</p>\n<ul>\n<li>CommonJs 模块输出的是值的复制；ES6模块输出的是值的引用</li>\n</ul>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&lt;!-- CommonJS lib.js --&gt;</span><br><span class=\"line\">var counter = 3;</span><br><span class=\"line\">function inCounter()&#123;</span><br><span class=\"line\">\tcounter++;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\">module.exports=&#123;</span><br><span class=\"line\">\tcounter: counter,</span><br><span class=\"line\">\tinCounter: inCounter</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">&lt;!-- CommonJS main.js --&gt;</span><br><span class=\"line\">var mod = require(&apos;./lib&apos;);</span><br><span class=\"line\">mod.counter // 3</span><br><span class=\"line\">mode.inCouter();</span><br><span class=\"line\">mod.counter //3</span><br><span class=\"line\"></span><br><span class=\"line\">&lt;!-- ES6 lib.js --&gt;</span><br><span class=\"line\">export let counter = 3;</span><br><span class=\"line\">export function inCounter()&#123;</span><br><span class=\"line\">\tcounter++;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">&lt;!-- ES6 main.js --&gt;</span><br><span class=\"line\">import &#123;counter, inCounter&#125; from &apos;./lib&apos;;</span><br><span class=\"line\">counter //3</span><br><span class=\"line\">inCounter();</span><br><span class=\"line\">counter //4</span><br></pre></td></tr></table></figure>\n<p>ES6 模块的运行机制和CommonJs不同。ES6模块中JS引擎对脚本静态分析是，遇到模块加载命令（import）就会生成一个只读引用，等脚本真正运行了才会根据引用到被加载的模块中取值。<br><strong>所以ES6模块是动态引用，没有缓存</strong></p>\n<p>注：地址是只读的，不能重新赋值</p>\n<ul>\n<li>CommonJS 模块是运行时加载，ES6模块是编译时输出接口</li>\n</ul>\n<h1 id=\"Node-加载\"><a href=\"#Node-加载\" class=\"headerlink\" title=\"Node 加载\"></a>Node 加载</h1><ol>\n<li>Node 有自己的CommonJS 模块格式，与ES6 模块格式不兼容，目前的解决方案是将两者分开，采用各自的加载方案。静态分析阶段，脚本只要有一行import 或 export 语句，Node就会认为是ES6模块；</li>\n</ol>\n<h2 id=\"CommonJs模块和ES6模块互相加载\"><a href=\"#CommonJs模块和ES6模块互相加载\" class=\"headerlink\" title=\"CommonJs模块和ES6模块互相加载\"></a>CommonJs模块和ES6模块互相加载</h2><ul>\n<li>import 命令加载CommonJS 模块<br>步骤一： module.exports 等同于 export.default</li>\n</ul>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">// a.js</span><br><span class=\"line\">module.exports=&#123;</span><br><span class=\"line\">\tfoo:&apos;hello&apos;,</span><br><span class=\"line\">\tbar:&apos;world&apos;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">&lt;!-- 等同于 --&gt;</span><br><span class=\"line\">export.default=&#123;</span><br><span class=\"line\">\tfoo:&apos;hello&apos;,</span><br><span class=\"line\">\tbar:&apos;world&apos;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">//引用</span><br><span class=\"line\">&lt;!-- 写法一 --&gt;</span><br><span class=\"line\">import baz from &apos;./a&apos;</span><br><span class=\"line\">&lt;!-- 写法二 --&gt;</span><br><span class=\"line\">import &#123;default as baz&#125; from &apos;./a&apos;</span><br><span class=\"line\">// 上面两种写法</span><br><span class=\"line\">//baz=&#123;foo:&apos;hello&apos;,bar:&apos;world&apos;&#125;</span><br><span class=\"line\">&lt;!-- 写法三 --&gt;</span><br><span class=\"line\">import * as baz from &apos;./a&apos;</span><br><span class=\"line\">// baz=&#123;</span><br><span class=\"line\">//\tget default()&#123;return module.exports;&#125;</span><br><span class=\"line\">//\tget foo()&#123; return this.default.foo &#125;.bind(baz);</span><br><span class=\"line\">//\tget bar()&#123; return this.default.bar &#125;.bind(baz);</span><br><span class=\"line\">//&#125;</span><br></pre></td></tr></table></figure>\n<p>步骤二：ES6模块是在编译时确定输出接口，CommonJS模块是在运行时才确定输出接口，所以一下写法❌</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">import &#123;readfile&#125; from &apos;fs&apos;;</span><br></pre></td></tr></table></figure>\n<ul>\n<li>require 命令加载ES6<br>ES6 模块的所有输出接口都会成为输出对象的属性</li>\n</ul>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">// es.js</span><br><span class=\"line\">let foo = &#123;bar:&apos;my-default&apos;&#125;;</span><br><span class=\"line\">export default foo;</span><br><span class=\"line\">foo=null;</span><br><span class=\"line\"></span><br><span class=\"line\">// commonJs.js</span><br><span class=\"line\">const es_namespace = require(&apos;./es&apos;);</span><br><span class=\"line\">es_namespace.deault // &#123;bar:&apos;my-default&apos;&#125;</span><br></pre></td></tr></table></figure>\n<p>注：es.js 对foo重新赋值没有在模块外反应出来，原因就是CommonJS加载的缓存</p>\n<hr>\n<h2 id=\"实际的应用\"><a href=\"#实际的应用\" class=\"headerlink\" title=\"实际的应用\"></a>实际的应用</h2><p>1.单页按需加载</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">const listRoutes = [</span><br><span class=\"line\">    &#123;</span><br><span class=\"line\">        path: &apos;list/:pageName&apos;,</span><br><span class=\"line\">        getComponent: (location, cb) =&gt; &#123;</span><br><span class=\"line\">            require.ensure([], (require) =&gt; &#123;</span><br><span class=\"line\">                cb(null, require(&apos;components/List/ListContainer&apos;).default);</span><br><span class=\"line\">            &#125;, &apos;list&apos;);</span><br><span class=\"line\">        &#125;,</span><br><span class=\"line\">        onEnter: (&#123; params &#125;) =&gt; &#123;</span><br><span class=\"line\">            pageEnter(&#123; ...params, pageType: &apos;list&apos; &#125;);</span><br><span class=\"line\">        &#125;,</span><br><span class=\"line\">    &#125;,</span><br><span class=\"line\">];</span><br></pre></td></tr></table></figure>\n<p>2.Koa 项目中模块引用</p>\n"},{"title":"My First Post","date":"2018-09-02T07:20:34.000Z","_content":"","source":"_posts/My-First-Post.md","raw":"---\ntitle: My First Post\ndate: 2018-09-02 15:20:34\ntags:\n---\n","slug":"My-First-Post","published":1,"updated":"2018-09-02T07:20:34.000Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cjlt97c7i0001mr6y7cwzxmyi","content":"","site":{"data":{}},"excerpt":"","more":""},{"title":"Hello World","_content":"Welcome to [Hexo](https://hexo.io/)! This is your very first post. Check [documentation](https://hexo.io/docs/) for more info. If you get any problems when using Hexo, you can find the answer in [troubleshooting](https://hexo.io/docs/troubleshooting.html) or you can ask me on [GitHub](https://github.com/hexojs/hexo/issues).\n\n## Quick Start\n\n### Create a new post\n\n``` bash\n$ hexo new \"My New Post\"\n```\n\nMore info: [Writing](https://hexo.io/docs/writing.html)\n\n### Run server\n\n``` bash\n$ hexo server\n```\n\nMore info: [Server](https://hexo.io/docs/server.html)\n\n### Generate static files\n\n``` bash\n$ hexo generate\n```\n\nMore info: [Generating](https://hexo.io/docs/generating.html)\n\n### Deploy to remote sites\n\n``` bash\n$ hexo deploy\n```\n\nMore info: [Deployment](https://hexo.io/docs/deployment.html)\n","source":"_posts/hello-world.md","raw":"---\ntitle: Hello World\n---\nWelcome to [Hexo](https://hexo.io/)! This is your very first post. Check [documentation](https://hexo.io/docs/) for more info. If you get any problems when using Hexo, you can find the answer in [troubleshooting](https://hexo.io/docs/troubleshooting.html) or you can ask me on [GitHub](https://github.com/hexojs/hexo/issues).\n\n## Quick Start\n\n### Create a new post\n\n``` bash\n$ hexo new \"My New Post\"\n```\n\nMore info: [Writing](https://hexo.io/docs/writing.html)\n\n### Run server\n\n``` bash\n$ hexo server\n```\n\nMore info: [Server](https://hexo.io/docs/server.html)\n\n### Generate static files\n\n``` bash\n$ hexo generate\n```\n\nMore info: [Generating](https://hexo.io/docs/generating.html)\n\n### Deploy to remote sites\n\n``` bash\n$ hexo deploy\n```\n\nMore info: [Deployment](https://hexo.io/docs/deployment.html)\n","slug":"hello-world","published":1,"date":"2018-08-29T01:45:56.000Z","updated":"2018-08-29T01:45:56.000Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cjlt97c7m0002mr6ysexlm37p","content":"<p>Welcome to <a href=\"https://hexo.io/\" target=\"_blank\" rel=\"noopener\">Hexo</a>! This is your very first post. Check <a href=\"https://hexo.io/docs/\" target=\"_blank\" rel=\"noopener\">documentation</a> for more info. If you get any problems when using Hexo, you can find the answer in <a href=\"https://hexo.io/docs/troubleshooting.html\" target=\"_blank\" rel=\"noopener\">troubleshooting</a> or you can ask me on <a href=\"https://github.com/hexojs/hexo/issues\" target=\"_blank\" rel=\"noopener\">GitHub</a>.</p>\n<h2 id=\"Quick-Start\"><a href=\"#Quick-Start\" class=\"headerlink\" title=\"Quick Start\"></a>Quick Start</h2><h3 id=\"Create-a-new-post\"><a href=\"#Create-a-new-post\" class=\"headerlink\" title=\"Create a new post\"></a>Create a new post</h3><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ hexo new <span class=\"string\">\"My New Post\"</span></span><br></pre></td></tr></table></figure>\n<p>More info: <a href=\"https://hexo.io/docs/writing.html\" target=\"_blank\" rel=\"noopener\">Writing</a></p>\n<h3 id=\"Run-server\"><a href=\"#Run-server\" class=\"headerlink\" title=\"Run server\"></a>Run server</h3><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ hexo server</span><br></pre></td></tr></table></figure>\n<p>More info: <a href=\"https://hexo.io/docs/server.html\" target=\"_blank\" rel=\"noopener\">Server</a></p>\n<h3 id=\"Generate-static-files\"><a href=\"#Generate-static-files\" class=\"headerlink\" title=\"Generate static files\"></a>Generate static files</h3><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ hexo generate</span><br></pre></td></tr></table></figure>\n<p>More info: <a href=\"https://hexo.io/docs/generating.html\" target=\"_blank\" rel=\"noopener\">Generating</a></p>\n<h3 id=\"Deploy-to-remote-sites\"><a href=\"#Deploy-to-remote-sites\" class=\"headerlink\" title=\"Deploy to remote sites\"></a>Deploy to remote sites</h3><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ hexo deploy</span><br></pre></td></tr></table></figure>\n<p>More info: <a href=\"https://hexo.io/docs/deployment.html\" target=\"_blank\" rel=\"noopener\">Deployment</a></p>\n","site":{"data":{}},"excerpt":"","more":"<p>Welcome to <a href=\"https://hexo.io/\" target=\"_blank\" rel=\"noopener\">Hexo</a>! This is your very first post. Check <a href=\"https://hexo.io/docs/\" target=\"_blank\" rel=\"noopener\">documentation</a> for more info. If you get any problems when using Hexo, you can find the answer in <a href=\"https://hexo.io/docs/troubleshooting.html\" target=\"_blank\" rel=\"noopener\">troubleshooting</a> or you can ask me on <a href=\"https://github.com/hexojs/hexo/issues\" target=\"_blank\" rel=\"noopener\">GitHub</a>.</p>\n<h2 id=\"Quick-Start\"><a href=\"#Quick-Start\" class=\"headerlink\" title=\"Quick Start\"></a>Quick Start</h2><h3 id=\"Create-a-new-post\"><a href=\"#Create-a-new-post\" class=\"headerlink\" title=\"Create a new post\"></a>Create a new post</h3><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ hexo new <span class=\"string\">\"My New Post\"</span></span><br></pre></td></tr></table></figure>\n<p>More info: <a href=\"https://hexo.io/docs/writing.html\" target=\"_blank\" rel=\"noopener\">Writing</a></p>\n<h3 id=\"Run-server\"><a href=\"#Run-server\" class=\"headerlink\" title=\"Run server\"></a>Run server</h3><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ hexo server</span><br></pre></td></tr></table></figure>\n<p>More info: <a href=\"https://hexo.io/docs/server.html\" target=\"_blank\" rel=\"noopener\">Server</a></p>\n<h3 id=\"Generate-static-files\"><a href=\"#Generate-static-files\" class=\"headerlink\" title=\"Generate static files\"></a>Generate static files</h3><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ hexo generate</span><br></pre></td></tr></table></figure>\n<p>More info: <a href=\"https://hexo.io/docs/generating.html\" target=\"_blank\" rel=\"noopener\">Generating</a></p>\n<h3 id=\"Deploy-to-remote-sites\"><a href=\"#Deploy-to-remote-sites\" class=\"headerlink\" title=\"Deploy to remote sites\"></a>Deploy to remote sites</h3><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ hexo deploy</span><br></pre></td></tr></table></figure>\n<p>More info: <a href=\"https://hexo.io/docs/deployment.html\" target=\"_blank\" rel=\"noopener\">Deployment</a></p>\n"}],"PostAsset":[],"PostCategory":[],"PostTag":[],"Tag":[]}}